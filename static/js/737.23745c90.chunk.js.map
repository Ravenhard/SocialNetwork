{"version":3,"file":"static/js/737.23745c90.chunk.js","mappings":"gLACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,2B,mBCW5I,EATmB,SAACA,GAChB,IAAIC,EAAM,YAAcD,EAAME,GAC9B,OACI,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,QAGrC,ECFD,EANgB,SAACN,GACb,OACI,gBAAKG,UAAWC,EAAAA,OAAhB,SAA2BJ,EAAMO,SAExC,E,kDCuCD,MAxCA,SAA8BP,GAE1B,IAGMQ,EAAmBC,EAAAA,GAAW,CAChCF,QAASE,EAAAA,KAAaC,SAAS,cAKnC,OACI,SAAC,KAAD,CACIC,cAXc,CAClBJ,QAAS,IAWLC,iBAAkBA,EAClBI,SAPS,SAAAC,GACbb,EAAMc,YAAYD,EAAON,QAC5B,EAEG,SAMQ,SAAAQ,GACI,OACI,UAAC,KAAD,YACI,SAACC,EAAA,EAAD,CACIC,QAAQ,WACRC,MAAM,GACNZ,KAAK,aAET,mBACIa,KAAK,SACLC,UAAWL,EAAOM,QAFtB,sBAQX,GAIhB,ECbD,EAvBgB,SAACrB,GAEb,IAAIsB,EAAQtB,EAAMuB,YAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OAAO,SAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAiBJ,GAAIyB,EAAEzB,IAAZyB,EAAEzB,GAAxC,IAEnC0B,EAAmBN,EAAMO,SAASH,KAAI,SAACI,GAAD,OAAO,SAAC,EAAD,CAASvB,QAASuB,EAAEvB,SAAcuB,EAAE5B,GAA3C,IAE1C,OAAoB,GAAhBF,EAAM+B,QAAwB,SAAC,KAAD,CAAU1B,GAAI,YAG5C,iBAAKF,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,aAAhB,SACKoB,KAEL,iBAAKrB,UAAWC,EAAAA,SAAhB,WACI,yBAAMwB,KACN,SAAC,EAAD,CAAsBd,YAAad,EAAMc,mBAIxD,E,mBCPD,GAAekB,E,QAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAACX,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE1B,IAEuB,SAACW,GACrB,MAAO,CACHpB,YAAa,SAACqB,GACVD,GAASE,EAAAA,EAAAA,GAAmBD,GAC/B,EAER,IAIGE,EAAAA,EAFJ,CAGEC,E,kJCpBEC,EAA6B,SAACjB,GAAD,MAAY,CACzCS,OAAQT,EAAMkB,KAAKT,OADU,EAIpBM,EAAe,SAACI,GAAe,IAClCC,EADiC,0IAEnC,WACI,OAAyB,IAAtBC,KAAK3C,MAAM+B,QAAyB,SAAC,KAAD,CAAU1B,GAAI,YAE9C,SAACoC,GAAD,UAAeE,KAAK3C,OAC9B,KANkC,GACP4C,EAAAA,WAUhC,OAFqCX,EAAAA,EAAAA,IAAQM,EAARN,CAAoCS,EAG5E,C","sources":["webpack://react-kabzda-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/form/DialogAddMessageForm.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/hoc/AuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__eK4oU\",\"dialogsItems\":\"Dialogs_dialogsItems__8auj6\",\"active\":\"Dialogs_active__+AhVw\",\"messages\":\"Dialogs_messages__LtAEY\"};","import s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nconst DialogItem = (props) => {\r\n    let path ='/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) =>{\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport {Formik, Form} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport FormikControl from \"./FormComponent/FormikControl\";\r\n\r\nfunction DialogAddMessageForm(props) {\r\n\r\n    const initialValues = {\r\n        message: '',\r\n    }\r\n    const validationSchema = Yup.object({\r\n        message: Yup.string().required('Required'),\r\n    })\r\n    const onSubmit = values => {\r\n        props.sendMessage(values.message)\r\n    }\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            {\r\n                formik => {\r\n                    return (\r\n                        <Form>\r\n                            <FormikControl\r\n                                control='textarea'\r\n                                label=''\r\n                                name='message'\r\n                            />\r\n                            <button\r\n                                type='submit'\r\n                                disabled={!formik.isValid}\r\n                            >\r\n                                Submit\r\n                            </button>\r\n                        </Form>\r\n                    )\r\n                }\r\n            }\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default DialogAddMessageForm;","import s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport DialogAddMessageForm from \"../form/DialogAddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogElements = state.dialogs.map((d) => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n\r\n    let messagesElements = state.messages.map((m) => <Message message={m.message} key={m.id}/>);\r\n\r\n    if (props.isAuth == false) return <Navigate to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <DialogAddMessageForm sendMessage={props.sendMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {AuthRedirect} from \"../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispathToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispathToProps),\r\n    AuthRedirect\r\n)(Dialogs);","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const AuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(this.props.isAuth === false) return <Navigate to={'/login'} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthNavigateComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthNavigateComponent;\r\n}"],"names":["props","path","id","className","s","to","name","message","validationSchema","Yup","required","initialValues","onSubmit","values","sendMessage","formik","FormikControl","control","label","type","disabled","isValid","state","dialogsPage","dialogElements","dialogs","map","d","messagesElements","messages","m","isAuth","compose","connect","dispatch","newMessageBody","sendMessageCreator","AuthRedirect","Dialogs","mapStateToPropsForRedirect","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}