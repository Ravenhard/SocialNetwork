{"version":3,"file":"static/js/630.9bf4c8a3.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-kabzda-1/./src/components/Profile/MyPost/MyPosts.module.css?a619","webpack://react-kabzda-1/./src/components/Profile/MyPost/Post/Post.module.css?5715","components/Profile/MyPost/Post/Post.jsx","components/form/ProfileAddMessageForm.js","components/Profile/MyPost/MyPosts.jsx","components/Profile/MyPost/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/hoc/AuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__5+SaS\"};","import React from 'react'\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n       editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n                editMode: true\r\n            })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n                editMode: false\r\n            })\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={ this.activateEditMode }>{this.props.status || '----'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input\r\n                            onChange={this.onStatusChange}\r\n                            autoFocus={true}\r\n                            onBlur={this.deactivateEditMode }\r\n                            value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={activateMode} >{props.status || '----'}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input\r\n                            onChange={onStatusChange}\r\n                            onBlur={deactivateEditMode}\r\n                            autoFocus={true}\r\n                            value={status}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\nexport default ProfileStatusWithHooks;","import s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if( !props.profile ){\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src=\"https://studychinese.ru/content/dictionary/pictures/25/12944.jpg\"/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__8EPIA\",\"posts\":\"MyPosts_posts__8nomv\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__m-WuE\"};","import s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className={s.item}>\r\n                <img src=\"https://pixelbox.ru/wp-content/uploads/2021/05/ava-vk-animal-91.jpg\"/>\r\n                { props.message }\r\n                <div>\r\n                    <span>like {props.count}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport {Formik, Form} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport FormikControl from \"./FormComponent/FormikControl\";\r\n\r\nfunction ProfileAddMessageForm(props) {\r\n\r\n    const initialValues = {\r\n        message: '',\r\n    }\r\n    const validationSchema = Yup.object({\r\n        message: Yup.string().required('Required'),\r\n    })\r\n    const onSubmit = values => {\r\n        props.addPost(values.message)\r\n    }\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            {\r\n                formik => {\r\n                    return (\r\n                        <Form>\r\n                            <FormikControl\r\n                                control='textarea'\r\n                                label=''\r\n                                name='message'\r\n                            />\r\n                            <button\r\n                                type='submit'\r\n                                disabled={!formik.isValid}\r\n                            >\r\n                                Submit\r\n                            </button>\r\n                        </Form>\r\n                    )\r\n                }\r\n            }\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default ProfileAddMessageForm;","import s from './MyPosts.module.css'\r\nimport React, {useRef} from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport ProfileAddMessageForm from \"../../form/ProfileAddMessageForm\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.posts.map( p=>  <Post message={p.message}  count = {p.likesCount}/> )\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My Posts</h3>\r\n            <ProfileAddMessageForm addPost={props.addPost} />\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React, {useRef} from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nlet mapDispathToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispathToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPost/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile = {props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {AuthRedirect} from \"../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getAuthUserData} from \"../../redux/auth-reducer\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.autorizedUsedId;\r\n        }\r\n        if (userId) {\r\n            this.props.getUserProfile(userId);\r\n            this.props.getStatus(userId);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUsedId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport function withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let params = useParams();\r\n        return <Component {...props} router={{ params }} />;\r\n    }\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nexport const withNavigate = (Component) => {\r\n    let RedirectTo =(props) => {\r\n        return < Component {...props} navigate={useNavigate() } />\r\n    }\r\n    return RedirectTo;\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    AuthRedirect,\r\n    withNavigate,\r\n)(ProfileContainer)\r\n\r\n","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const AuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(this.props.isAuth === false) return <Navigate to={'/login'} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthNavigateComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthNavigateComponent;\r\n}"],"names":["React","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","profile","src","className","s","photos","large","Preloader","message","count","validationSchema","Yup","required","initialValues","onSubmit","values","addPost","formik","FormikControl","control","label","name","type","disabled","isValid","postsElements","posts","map","p","likesCount","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userId","this","router","params","autorizedUsedId","getUserProfile","getStatus","withRouter","Component","useParams","withNavigate","navigate","useNavigate","compose","auth","isAuth","AuthRedirect","mapStateToPropsForRedirect","RedirectComponent","to"],"sourceRoot":""}